{"version":3,"file":"uploader.cjs.js","sources":["../src/utils/Function.ts","../src/utils/EventHub.ts","../src/core/UploadHandler.ts","../src/core/Uploader.ts","../src/utils/UrlParser.ts","../src/utils/UniqueCode.ts","../src/upload-handler/LocalChooseUploadHandler.ts","../src/upload-handler/RemoteUploadHandler.ts"],"sourcesContent":["export function optionHander<T>(option: T, defaultOption: any = {}): T {\n  if (!option || typeof option !== \"object\") {\n    return option || defaultOption;\n  }\n  const keys = Object.keys(option);\n  return keys.reduce((prev, key) => {\n    const val = option[key];\n    if (val && typeof val === \"object\") {\n      prev[key] = optionHander(val, defaultOption[key] || {});\n    } else {\n      prev[key] = val;\n    }\n    return prev;\n  }, defaultOption);\n}\n\nexport function sleep(interval) {\n  return new Promise((resolve) => setTimeout(resolve, interval));\n}\n","export class EventHub<K = keyof {}> {\n\n  private _events = new Map<K, Set<EventHubCb<any>>>();\n\n  on<T extends K>(key: T, cb: EventHubCb): EventHub<K> {\n    if (!this._events.has(key)) {\n      this._events.set(key, new Set);\n    }\n    this._events.get(key).add(cb);\n    return this;\n  }\n\n  off(key: K, cb: EventHubCb): EventHub<K> {\n    if (!this._events.has(key)) {\n      return this;\n    }\n\n    this._events.get(key).delete(cb);\n\n    return this;\n  }\n\n  remove(key: K): EventHub<K> {\n    if (!this._events.has(key)) {\n      return this;\n    }\n    this._events.get(key).forEach(cb => this.off(key, cb));\n    this._events.delete(key);\n  }\n\n  once(key: K, cb: EventHubCb): EventHub<K> {\n    if (!this._events.has(key)) {\n      this._events.set(key, new Set);\n    }\n    const that = this;\n    this._events.get(key).add(function t(...args) {\n      cb(...args);\n      that.off(key, t);\n    });\n    return this;\n  }\n\n  emit(key: K, ...args: any[]): EventHub<K> {\n    if (!this._events.has(key)) {\n      return this;\n    }\n    this._events.get(key).forEach(cb => cb(...args));\n  }\n\n  events() {\n    return this._events;\n  }\n\n  async asyncEmit(key: K, ...args: any[]) {\n    await Promise.resolve().then(()=>this.emit(key, ...args))\n  }\n\n}\n\ntype EventHubCb<T = any> = (...args: T[]) => void;\n// TODO: 类型提示需要优化\n","import { EventHub } from \"../utils/EventHub\";\n\nexport enum UploadHook {\n  CREATED = \"created\", // 创建完成后\n  // BEFORE_UPLOAD = 'beforeUpload',\n  UPLOADED = \"uploaded\", //上传完成后\n  ABOUT = \"about\",\n  ERROR = \"error\", // 报错之后\n  // PROCESS = \"process\",\n  DESTROYED = \"destroyed\", // 销毁之后\n  WAIT = \"wait\", // 上传完成之后，无论成功或失败，与uploaded回调参数有不同\n}\n\nexport type Cate =\n  | \"record\" // 录音\n  | \"video\" // 视频\n  | \"img\" // 图片\n  | \"answer_img\" // 答题图片\n  | \"file\" // 文件，除图片视频录音\n  | \"album\" // 网盘相册\n  | \"disk\"; // 网盘\n\nexport type CreatedHookArg = string; // type 上传类型, 是UploaderHandler.name()的返回值\n// export type BeforeUploadHookArg = FileMeta[];\nexport type UploadedHookArg = FileMeta[];\nexport type AboutHookArg = {\n  hook: UploadHook;\n  process: number;\n  message: string;\n};\nexport type ErrorHookArg = Error; // 错误信息\n\nexport interface FileMeta {\n  name?: string; // 文件名\n  size?: number; // 文件大小\n  type?: string; // 文件类型\n  ext?: string; // 文件扩展\n  url?: string; // 文件在OSS的完整地址\n  urlPath?: string; // 文件在OSS的上除去域名的部分\n  path?: string; // 文件在本地到位置\n  time?: number; // 文件在会话的时间\n  duration?: number; // 音视频文件的时长\n}\n\nexport type HookCb<T> = (data?: T, that?: any) => void;\n\nexport interface UploadHandlerConstruction<T> {\n  new (option?: T): UploadHandler<T>;\n}\n\nexport abstract class UploadHandler<T, CUH = any, H = CUH | UploadHook> {\n  private _hook = new EventHub<H>();\n  private _option: T;\n\n  constructor(option: T) {\n    this.option(option);\n  }\n\n  option(option?: T): T {\n    if (option) {\n      this._option = option;\n    }\n    return this._option;\n  }\n\n  /**\n   * 获取事件处理器\n   * @returns EventHub\n   */\n  hook(hook?: EventHub): EventHub<H> {\n    if (hook) {\n      this._hook = hook;\n    }\n    return this._hook;\n  }\n\n  /**\n   * 需要重写的方法，如果不重写会报错，核心的上传方法\n   * @returns Promise\n   */\n  upload(): Promise<FileMeta[]> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * 需要重写的方法，如果不重写会报错，销毁方法\n   * @returns void\n   */\n  destroy() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  about() {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport class VerifyFileException extends Error {\n  readonly name: string = \"VerifyFileException\";\n  type: string;\n  file: WechatMiniprogram.ChooseFile;\n  constructor(type, file) {\n    super(`File ${type} no pass verify.`);\n    this.type = type;\n    this.file = file;\n  }\n}\n\nexport class AboutException extends Error {\n  type: string;\n  constructor() {\n    super(`About Run`);\n    this.type = \"about\";\n  }\n}\n\nexport type VerifyContentHandler = (file: FileMeta) => Promise<boolean>;\n","import { __DEV__ } from \"./env\";\nimport { optionHander } from \"../utils/Function\";\n\nimport {\n  UploadHandler,\n  UploadHook,\n  HookCb,\n  FileMeta,\n  UploadHandlerConstruction,\n} from \"./UploadHandler\";\n\nexport class Uploader<O> {\n  private _uploadHandler: UploadHandler<O>;\n  private _option: O;\n  private _isRun: boolean;\n\n  /**\n   * @param  {UploadHandlerConstruction<O>} UploadHandler // 传输器\n   * @param  {O} option? 传给 UploadHandler 的选项\n   */\n  constructor(UploadHandler: UploadHandlerConstruction<O>, option?: O) {\n    this.loadUploadHandler(UploadHandler, option);\n  }\n\n  /**\n   * 同上\n   * @param  {UploadHandlerConstruction<O>} LoadUploadHandler\n   * @param  {O} option?\n   * @returns Uploader\n   */\n  loadUploadHandler(\n    LoadUploadHandler: UploadHandlerConstruction<O>,\n    option?: O\n  ): Uploader<O> {\n    if(this._uploadHandler && this._uploadHandler instanceof LoadUploadHandler){\n      return this;\n    }\n    this._isRun = false\n    let hook = null;\n    if (this._uploadHandler) {\n      this._uploadHandler.about();\n      hook = this._uploadHandler.hook();\n    }\n    this._option = optionHander(option, this._option);\n    this._uploadHandler = new LoadUploadHandler(this._option);\n    this._uploadHandler.hook(hook);\n\n    if (!(this._uploadHandler instanceof LoadUploadHandler)) {\n      throw new Error(\"@sharedkit/Uploader: uploadHandler load error\");\n    }\n\n    this._uploadHandler.hook().asyncEmit(UploadHook.CREATED, this);\n\n    return this;\n  }\n\n  /**\n   * 开始上传\n   * @returns Uploader\n   */\n  upload(): Uploader<O> {\n    if(this._isRun){\n      return this\n    }\n    this._isRun = true\n    this._uploadHandler\n      .upload()\n      .then((res) => {\n        this._isRun = false\n        this._uploadHandler.hook().emit(UploadHook.UPLOADED, res);\n        this._uploadHandler.hook().emit(UploadHook.WAIT, null, res);\n      })\n      .catch((err) => {\n        this._isRun = false\n        this._uploadHandler.hook().emit(UploadHook.ERROR, err);\n        this._uploadHandler.hook().emit(UploadHook.WAIT, err, null);\n      });\n    return this;\n  }\n\n  /**\n   * 监听一个钩子\n   * @param  {H} hook 钩子类型\n   * @param  {HookCb<H>} cb 回调函数\n   * @returns Uploader\n   */\n  on<H extends UploadHook>(hook: H, cb: HookCb<H>): Uploader<O> {\n    this._uploadHandler.hook().on(hook, cb);\n    return this;\n  }\n\n  /**\n   * 移除一个钩子\n   * @param  {H} hook\n   * @param  {HookCb<H>} cb\n   * @returns Uploader\n   */\n  off<H extends UploadHook>(hook: H, cb: HookCb<H>): Uploader<O> {\n    this._uploadHandler.hook().off(hook, cb);\n    return this;\n  }\n\n  /**\n   * 监听一个钩子, 但只监听一次\n   * @param  {H} hook 钩子类型\n   * @param  {HookCb<H>} cb 回调函数\n   * @returns Uploader\n   */\n  once<H extends UploadHook>(hook: H, cb: HookCb<H>): Uploader<O> {\n    this._uploadHandler.hook().once(hook, cb);\n    return this;\n  }\n\n  /**\n   * 等待Uplaoder上传完成\n   * */\n  wait(): Promise<FileMeta[]> {\n    return new Promise((resolve, reject) => {\n      this.once(UploadHook.WAIT, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        resolve(data);\n      });\n    });\n  }\n\n  /**\n   * 获取或者修改选项\n   * @param  {O} option? 传入的选项\n   */\n  option(option?: O) {\n    return this._uploadHandler.option(option);\n  }\n\n  /**\n   * 销毁\n   * @returns void\n   */\n  destroy(): void {\n    this._uploadHandler.destroy();\n    this._uploadHandler.hook().emit(UploadHook.DESTROYED);\n    this._uploadHandler\n      .hook()\n      .events()\n      .forEach((_, k) => this._uploadHandler.hook().remove(k));\n  }\n\n  about(): Uploader<O> {\n    if(this._isRun){\n      this._uploadHandler.about();\n      this._uploadHandler.hook().emit(UploadHook.ABOUT);\n    }\n    return this;\n  }\n\n  uploadHandler(handler: UploadHandlerConstruction<O>) {\n    if (handler) {\n      this.loadUploadHandler(handler);\n    }\n    return this._uploadHandler;\n  }\n}\n","interface Url {\n  url: string;\n  protocol: string;\n  domain: string;\n  path: string;\n  basePath: string;\n  name: string;\n  ext: string;\n}\n\nexport class UrlParser {\n  static parse(url: string) {\n    const ext = UrlParser.ext(url);\n    return {\n      url,\n      ext,\n    };\n  }\n\n  static ext(url: string) {\n    const [_, ext = \"\"] = url.match(/.(\\w+)$/);\n    return ext;\n  }\n}\n","var CHARS =\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n\nexport function uuid(len?: number, radix = CHARS.length): string {\n  var chars = CHARS,\n    uuid = [];\n  if (len) {\n    for (var i = 0; i < len; i++) uuid[i] = chars[0 | (Math.random() * radix)];\n  } else {\n    var r;\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = \"-\";\n    uuid[14] = \"4\";\n    for (var i = 0; i < 36; i++) {\n      if (!uuid[i]) {\n        r = 0 | (Math.random() * 16);\n        uuid[i] = chars[i == 19 ? (r & 0x3) | 0x8 : r & 0xf];\n      }\n    }\n  }\n  return uuid.join(\"\");\n}\n","import { UrlParser } from \"./../utils/UrlParser\";\nimport { optionHander } from \"../utils/Function\";\nimport { uuid } from \"../utils/UniqueCode\";\nimport {\n  UploadHandler,\n  FileMeta,\n  UploadHook,\n  VerifyFileException,\n  UploadHandlerConstruction,\n  VerifyContentHandler,\n  Cate,\n} from \"../core/UploadHandler\";\n\nexport class LocalChooseUploadHandlerOption {\n  exts: string[] = []; // 限制文件后缀，最后会传给微信API\n  count: number = 1; // 限制文件数量，最后会传给微信API\n  type: \"all\" | \"video\" | \"image\" | \"file\" = \"all\"; // 类型，给微信API的\n  cate?: Cate; // 会传给 aliyunOss 这个方法, 如果不传会通过type推算\n  size?: number = 1024 * 1024 * 3; // B, default 3MB 限制大小\n  prefix?: string = \"\"; // 资源路径前缀\n  uploadFileHandler: uploadFileHandler; // 上传文件的钩子函数\n  verifyContentHandler?: VerifyContentHandler = async () => true;\n}\n\nexport type uploadFileHandler = (\n  files: UploadAliyunFile[]\n) => Promise<string> | void;\n// 上传处理程序的约束\n\nexport class LocalChooseUploadHandler extends UploadHandler<LocalChooseUploadHandlerOption> {\n  constructor(option: LocalChooseUploadHandlerOption) {\n    super(optionHander(option, new LocalChooseUploadHandlerOption()));\n  }\n\n  async upload() {\n    const self = this;\n    const tempFiles = await selectFile();\n    const files = transfromFileMeta(tempFiles);\n\n    const uploadAliyunFiles = await transfromUploadAliyunFile(files);\n\n    await this.option().uploadFileHandler(uploadAliyunFiles);\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      if (!(await this.option().verifyContentHandler(file))) {\n        throw new VerifyFileException(\"content\", file);\n      }\n    }\n\n    return files;\n\n    async function selectFile() {\n      if (!wx.canIUse(\"chooseMessageFile\")) {\n        throw new CantUseApiException(\"chooseMessageFile\");\n      }\n\n      const { tempFiles } = await wx.chooseMessageFile({\n        count: self.option().count,\n        type: self.option().type,\n        extension: self.option().exts,\n      });\n\n      return tempFiles;\n    }\n    function transfromFileMeta(\n      tempFiles: WechatMiniprogram.ChooseFile[] = []\n    ): FileMeta[] {\n      if (tempFiles.length > self.option().count) {\n        throw new VerifyFileException(\"count\", tempFiles);\n      }\n      return tempFiles.map((tempFile) => {\n        if (tempFile.size > self.option().size) {\n          throw new VerifyFileException(\"size\", tempFile);\n        }\n        if (tempFile.type !== self.option().type) {\n          throw new VerifyFileException(\"type\", tempFile);\n        }\n        let ext = UrlParser.ext(tempFile.name);\n        if (\n          self.option().exts?.length &&\n          !self.option().exts.includes(ext.toLowerCase())\n        ) {\n          throw new VerifyFileException(\"exts\", tempFile);\n        }\n        return {\n          size: tempFile.size,\n          ext,\n          name: tempFile.name,\n          type: tempFile.type,\n          path: tempFile.path,\n          time: tempFile.time,\n          urlPath: `${self.option().prefix}/${uuid()}.${ext}`,\n        };\n      });\n    }\n    function transfromUploadAliyunFile(files: FileMeta[]): UploadAliyunFile[] {\n      const typeToCate = {\n        all: \"disk\",\n        video: \"video\",\n        image: \"img\",\n        file: \"file\",\n      };\n      const ossBucketMap = {\n        record: \"https://campusrecord.welife001.com\",\n        video: \"https://campusvideo.welife001.com\",\n        img: \"https://campus002.welife001.com\",\n        answer_img: \"https://campus002.welife001.com\",\n        file: \"https://campusfile.welife001.com\",\n        album: \"https://album.welife001.com\", //网盘相册\n        disk: \"https://disk.welife001.com\", //网盘文件\n      };\n\n      return files.map((file) => {\n        const cate = self.option().cate || typeToCate[file.type]; // 如果没有传入cate， 自动推算cate类型\n        const url = ossBucketMap[cate] + file.urlPath;\n        file.url = url;\n        return {\n          cate,\n          url,\n          file: file.path,\n          new_name: file.urlPath.substr(1),\n          size: file.size,\n        };\n      });\n    }\n  }\n\n  about() {}\n\n  destroy() {}\n}\n\nexport class UploadAliyunFile {\n  // TODO: 这是是 `utils/uploadoss/uploadAliyun.js` uploadFile 第一个参数的类型\n  //       目前的临时解决方案，之后封装了API之后修改\n  cate: Cate;\n  file: string;\n  new_name: string;\n  size: number;\n  duration?: number;\n}\n\nexport class CantUseApiException extends Error {\n  readonly name: string = \"CantUseApiException\";\n  type: string;\n  constructor(api: string) {\n    super(`Cant use ${api} because doesn't support it.`);\n    this.type = api;\n  }\n}\n\nexport class UploadFileException extends Error {\n  readonly name: string = \"ResponseStatusCodeException\";\n  type: string;\n  result: WechatMiniprogram.UploadFileSuccessCallbackResult;\n  constructor(res) {\n    super(`http status ${res.statuCode} not 2xx.`);\n    this.type = res.statuCode;\n    this.result = res;\n  }\n}\n","import { UrlParser } from \"./../utils/UrlParser\";\nimport { optionHander, sleep } from \"../utils/Function\";\nimport {\n  AboutException,\n  Cate,\n  FileMeta,\n  UploadHandler,\n  VerifyContentHandler,\n  VerifyFileException,\n} from \"../core/UploadHandler\";\n\nexport type CreateCodeHandler = (\n  uploadHandler: RemoteUploadHandler\n) => Promise<string>;\nexport type RemoveCodeHandler = (\n  code: string,\n  uploadHandler: RemoteUploadHandler\n) => Promise<void> | void;\nexport type ReadAssetUrlHandler = (\n  code: string,\n  uploadHandler: RemoteUploadHandler\n) => Promise<FileMeta[] | undefined | false>;\n\nexport class RemoteUploadHandlerOption {\n  exts: string[] = []; // 限制文件后缀\n  count: number = 1; // 限制文件数量\n  type: \"all\" | \"video\" | \"image\" | \"file\" = \"all\";\n  cate?: Cate;\n  size?: number = 1024 * 1024 * 3; // B, default 3MB\n  prefix?: string = \"\";\n  maxReadAssetUrlTimes?: number = 3000; // 限制轮询次数    - 弃用选项，请使用maxAge\n  sleepInterval?: number = 1000; // ms default 1s 轮询间隔 - 弃用选项，请使用maxAge\n  maxAge?: number = 5 * 60; // s default 5分钟 + Code过期时间\n  createCodeHandler: CreateCodeHandler; // 创建传输码的钩子\n  removeCodeHandler: RemoveCodeHandler; // 移除传输码的钩子\n  readAssetUrlHandler: ReadAssetUrlHandler; // 读取传输码的钩子\n  verifyContentHandler: VerifyContentHandler = async () => true; // 验证文件内容\n}\n\nexport enum RemoteHook {\n  CREATED_CODE = \"createdCode\",\n}\n\nexport class RemoteUploadHandler extends UploadHandler<\n  RemoteUploadHandlerOption,\n  RemoteHook\n> {\n  private _code: string;\n  private _codeExpriedAt: number; // 过期时间\n  private _aboutPool = false;\n  constructor(option: RemoteUploadHandlerOption) {\n    super(optionHander(option, new RemoteUploadHandlerOption()));\n  }\n\n  async upload(): Promise<FileMeta[]> {\n    const self = this;\n\n    const files = await pool();\n    await verifyFile(files);\n\n    if (this._code) await this.option().removeCodeHandler(this._code, this);\n    this._code = \"\";\n\n    return files;\n    async function pool() {\n      while (true) {\n        const code = await self.option().createCodeHandler(self);\n        self._codeExpriedAt = Date.now() + self.option().maxAge * 1000;\n        self.hook().emit(RemoteHook.CREATED_CODE, code);\n        self._code = code;\n        while (self._codeExpriedAt >= Date.now()) {\n          if (self._aboutPool) {\n            self._aboutPool = false;\n            if (self._code)\n              await self.option().removeCodeHandler(self._code, self);\n            self._code = \"\";\n            throw new AboutException();\n          }\n          const urls = await self.option().readAssetUrlHandler(code, self);\n          if (urls === false) {\n            return [];\n          }\n          if (urls) {\n            return urls;\n          }\n          await sleep(1000);\n        }\n      }\n      return [];\n    }\n\n    async function verifyFile(files: FileMeta[]) {\n      if (files.length > self.option().count) {\n        throw new VerifyFileException(\"count\", files);\n      }\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        if (!self.option().exts.includes(file.ext.toLowerCase())) {\n          throw new VerifyFileException(\"ext\", file);\n        }\n        if (!(await self.option().verifyContentHandler(file))) {\n          throw new VerifyFileException(\"content\", file);\n        }\n      }\n    }\n  }\n\n  destroy() {\n    this.about();\n  }\n\n  async about() {\n    this._aboutPool = true;\n    if (this._code) await this.option().removeCodeHandler(this._code, this);\n    this._code = \"\";\n  }\n}\n"],"names":["UploadHook","RemoteHook"],"mappings":"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"}