{"version":3,"file":"uploader.esm.js","sources":["../src/utils/Function.ts","../src/utils/EventHub.ts","../src/core/UploadHandler.ts","../src/core/Uploader.ts","../src/utils/UniqueCode.ts","../src/utils/UrlParser.ts","../src/utils/tools.ts","../src/upload-handler/LocalChooseUploadHandler.ts","../src/upload-handler/RemoteUploadHandler.ts","../src/upload-handler/LocalUploadHandler.ts","../src/utils/urlParams.ts","../src/upload-handler/QQDocUploadHandler.ts"],"sourcesContent":["export function optionHander<T>(option: T, defaultOption: any = {}): T {\n  if (!option || typeof option !== \"object\") {\n    return option || defaultOption;\n  }\n  const keys = Object.keys(option);\n  return keys.reduce((prev, key) => {\n    const val = option[key];\n    if (val && typeof val === \"object\") {\n      prev[key] = optionHander(val, defaultOption[key] || {});\n    } else {\n      prev[key] = val;\n    }\n    return prev;\n  }, defaultOption);\n}\n\nexport function sleep(interval) {\n  return new Promise((resolve) => setTimeout(resolve, interval));\n}\n","export class EventHub<K = keyof {}> {\n\n  private _events = new Map<K, Set<EventHubCb<any>>>();\n\n  on<T extends K>(key: T, cb: EventHubCb): EventHub<K> {\n    if (!this._events.has(key)) {\n      this._events.set(key, new Set);\n    }\n    this._events.get(key).add(cb);\n    return this;\n  }\n\n  off(key: K, cb: EventHubCb): EventHub<K> {\n    if (!this._events.has(key)) {\n      return this;\n    }\n\n    this._events.get(key).delete(cb);\n\n    return this;\n  }\n\n  remove(key: K): EventHub<K> {\n    if (!this._events.has(key)) {\n      return this;\n    }\n    this._events.get(key).forEach(cb => this.off(key, cb));\n    this._events.delete(key);\n  }\n\n  once(key: K, cb: EventHubCb): EventHub<K> {\n    if (!this._events.has(key)) {\n      this._events.set(key, new Set);\n    }\n    const that = this;\n    this._events.get(key).add(function t(...args) {\n      cb(...args);\n      that.off(key, t);\n    });\n    return this;\n  }\n\n  emit(key: K, ...args: any[]): EventHub<K> {\n    if (!this._events.has(key)) {\n      return this;\n    }\n    this._events.get(key).forEach(cb => cb(...args));\n  }\n\n  events() {\n    return this._events;\n  }\n\n  async asyncEmit(key: K, ...args: any[]) {\n    await Promise.resolve().then(()=>this.emit(key, ...args))\n  }\n\n}\n\ntype EventHubCb<T = any> = (...args: T[]) => void;\n// TODO: 类型提示需要优化\n","import { EventHub } from \"../utils/EventHub\";\n\nexport enum UploadHook {\n  CREATED = \"created\", // 创建完成后\n  // BEFORE_UPLOAD = 'beforeUpload',\n  UPLOADED = \"uploaded\", //上传完成后\n  ABOUT = \"about\",\n  ERROR = \"error\", // 报错之后\n  // PROCESS = \"process\",\n  DESTROYED = \"destroyed\", // 销毁之后\n  WAIT = \"wait\", // 上传完成之后，无论成功或失败，与uploaded回调参数有不同\n}\n\nexport type Cate =\n  | \"record\" // 录音\n  | \"video\" // 视频\n  | \"img\" // 图片\n  | \"answer_img\" // 答题图片\n  | \"file\" // 文件，除图片视频录音\n  | \"album\" // 网盘相册\n  | \"disk\"; // 网盘\n\nexport type CreatedHookArg = string; // type 上传类型, 是UploaderHandler.name()的返回值\n// export type BeforeUploadHookArg = FileMeta[];\nexport type UploadedHookArg = FileMeta[];\nexport type AboutHookArg = {\n  hook: UploadHook;\n  process: number;\n  message: string;\n};\nexport type ErrorHookArg = Error; // 错误信息\n\nexport interface FileMeta {\n  name?: string; // 文件名\n  size?: number; // 文件大小\n  type?: string; // 文件类型\n  ext?: string; // 文件扩展\n  url?: string; // 文件在OSS的完整地址\n  urlPath?: string; // 文件在OSS的上除去域名的部分\n  path?: string; // 文件在本地到位置\n  resource?: string; // 资源\n  time?: number; // 文件在会话的时间\n  duration?: number; // 音视频文件的时长\n  creatorName?: string; // 创建人\n  uploaded?: boolean;\n  _raw_?: any;\n}\n\nexport type HookCb<T> = (data?: T, that?: any) => void;\n\nexport interface UploadHandlerConstruction<T> {\n  new (option?: T): UploadHandler<T>;\n}\n\nexport abstract class UploadHandler<T, CUH = any, H = CUH | UploadHook> {\n  private _hook = new EventHub<H>();\n  private _option: T;\n\n  constructor(option: T) {\n    this.option(option);\n  }\n\n  option(option?: T): T {\n    if (option) {\n      this._option = option;\n    }\n    return this._option;\n  }\n\n  /**\n   * 获取事件处理器\n   * @returns EventHub\n   */\n  hook(hook?: EventHub): EventHub<H> {\n    if (hook) {\n      this._hook = hook;\n    }\n    return this._hook;\n  }\n\n  /**\n   * 需要重写的方法，如果不重写会报错，核心的上传方法\n   * @returns Promise\n   */\n  upload(tempFiles?: WechatMiniprogram.ChooseFile[]): Promise<FileMeta[]> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * 需要重写的方法，如果不重写会报错，销毁方法\n   * @returns void\n   */\n  destroy() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  about() {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport class VerifyFileException extends Error {\n  readonly name: string = \"VerifyFileException\";\n  type: string;\n  file: WechatMiniprogram.ChooseFile;\n  constructor(type, file) {\n    super(`File ${type} no pass verify.`);\n    this.type = type;\n    this.file = file;\n  }\n}\n\nexport class AboutException extends Error {\n  type: string;\n  constructor() {\n    super(`About Run`);\n    this.type = \"about\";\n  }\n}\n\nexport type VerifyContentHandler = (file: FileMeta) => Promise<boolean>;\n","import { __DEV__ } from \"./env\";\nimport { optionHander } from \"../utils/Function\";\n\nimport {\n  UploadHandler,\n  UploadHook,\n  HookCb,\n  FileMeta,\n  UploadHandlerConstruction,\n} from \"./UploadHandler\";\n\nexport class Uploader<O> {\n  private _uploadHandler: UploadHandler<O>;\n  private _option: O;\n  private _isRun: boolean;\n\n  /**\n   * @param  {UploadHandlerConstruction<O>} UploadHandler // 传输器\n   * @param  {O} option? 传给 UploadHandler 的选项\n   */\n  constructor(UploadHandler: UploadHandlerConstruction<O>, option?: O) {\n    this.loadUploadHandler(UploadHandler, option);\n  }\n\n  /**\n   * 同上\n   * @param  {UploadHandlerConstruction<O>} LoadUploadHandler\n   * @param  {O} option?\n   * @returns Uploader\n   */\n  loadUploadHandler(\n    LoadUploadHandler: UploadHandlerConstruction<O>,\n    option?: O\n  ): Uploader<O> {\n    if (\n      this._uploadHandler &&\n      this._uploadHandler instanceof LoadUploadHandler\n    ) {\n      return this;\n    }\n    this._isRun = false;\n    let hook = null;\n    if (this._uploadHandler) {\n      this._uploadHandler.about();\n      hook = this._uploadHandler.hook();\n    }\n    this._option = optionHander(option, this._option);\n    this._uploadHandler = new LoadUploadHandler(this._option);\n    this._uploadHandler.hook(hook);\n\n    if (!(this._uploadHandler instanceof LoadUploadHandler)) {\n      throw new Error(\"@sharedkit/Uploader: uploadHandler load error\");\n    }\n\n    this._uploadHandler.hook().asyncEmit(UploadHook.CREATED, this);\n\n    return this;\n  }\n\n  /**\n   * 开始上传\n   * @returns Uploader\n   */\n  upload(tempFiles?: WechatMiniprogram.ChooseFile[]): Uploader<O> {\n    if (this._isRun) {\n      return this;\n    }\n    this._isRun = true;\n    this._uploadHandler\n      .upload(tempFiles)\n      .then((res) => {\n        this._isRun = false;\n        this._uploadHandler.hook().emit(UploadHook.UPLOADED, res);\n        this._uploadHandler.hook().emit(UploadHook.WAIT, null, res);\n      })\n      .catch((err) => {\n        this._isRun = false;\n        this._uploadHandler.hook().emit(UploadHook.ERROR, err);\n        this._uploadHandler.hook().emit(UploadHook.WAIT, err, null);\n      });\n    return this;\n  }\n\n  /**\n   * 监听一个钩子\n   * @param  {H} hook 钩子类型\n   * @param  {HookCb<H>} cb 回调函数\n   * @returns Uploader\n   */\n  on<H extends UploadHook>(hook: H, cb: HookCb<H>): Uploader<O> {\n    this._uploadHandler.hook().on(hook, cb);\n    return this;\n  }\n\n  /**\n   * 移除一个钩子\n   * @param  {H} hook\n   * @param  {HookCb<H>} cb\n   * @returns Uploader\n   */\n  off<H extends UploadHook>(hook: H, cb: HookCb<H>): Uploader<O> {\n    this._uploadHandler.hook().off(hook, cb);\n    return this;\n  }\n\n  /**\n   * 监听一个钩子, 但只监听一次\n   * @param  {H} hook 钩子类型\n   * @param  {HookCb<H>} cb 回调函数\n   * @returns Uploader\n   */\n  once<H extends UploadHook>(hook: H, cb: HookCb<H>): Uploader<O> {\n    this._uploadHandler.hook().once(hook, cb);\n    return this;\n  }\n\n  /**\n   * 等待Uplaoder上传完成\n   * */\n  wait(): Promise<FileMeta[]> {\n    return new Promise((resolve, reject) => {\n      this.once(UploadHook.WAIT, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        resolve(data);\n      });\n    });\n  }\n\n  /**\n   * 获取或者修改选项\n   * @param  {O} option? 传入的选项\n   */\n  option(option?: O) {\n    return this._uploadHandler.option(option);\n  }\n\n  /**\n   * 销毁\n   * @returns void\n   */\n  destroy(): void {\n    this._uploadHandler.destroy();\n    this._uploadHandler.hook().emit(UploadHook.DESTROYED);\n    this._uploadHandler\n      .hook()\n      .events()\n      .forEach((_, k) => this._uploadHandler.hook().remove(k));\n  }\n\n  about(): Uploader<O> {\n    if (this._isRun) {\n      this._uploadHandler.about();\n      this._uploadHandler.hook().emit(UploadHook.ABOUT);\n    }\n    return this;\n  }\n\n  uploadHandler(handler: UploadHandlerConstruction<O>) {\n    if (handler) {\n      this.loadUploadHandler(handler);\n    }\n    return this._uploadHandler;\n  }\n}\n","var CHARS =\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\");\n\nexport function uuid(len?: number, radix = CHARS.length): string {\n  var chars = CHARS,\n    uuid = [];\n  if (len) {\n    for (var i = 0; i < len; i++) uuid[i] = chars[0 | (Math.random() * radix)];\n  } else {\n    var r;\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = \"-\";\n    uuid[14] = \"4\";\n    for (var i = 0; i < 36; i++) {\n      if (!uuid[i]) {\n        r = 0 | (Math.random() * 16);\n        uuid[i] = chars[i == 19 ? (r & 0x3) | 0x8 : r & 0xf];\n      }\n    }\n  }\n  return uuid.join(\"\");\n}\n","interface Url {\n  url: string;\n  protocol: string;\n  domain: string;\n  path: string;\n  basePath: string;\n  name: string;\n  ext: string;\n}\n\nexport class UrlParser {\n  static parse(url: string) {\n    const ext = UrlParser.ext(url);\n    return {\n      url,\n      ext,\n    };\n  }\n\n  static ext(url: string) {\n    const [_, ext = \"\"] = url.match(/.(\\w+)$/) || [];\n    return ext;\n  }\n}\n","import { Cate, FileMeta, VerifyFileException } from \"../core/UploadHandler\";\nimport { uuid } from \"./UniqueCode\";\nimport { UrlParser } from \"./UrlParser\";\n\nexport function transfromFileMeta(\n  tempFiles: WechatMiniprogram.ChooseFile[] = [],\n  option: any\n): FileMeta[] {\n  if (tempFiles.length > option.count) {\n    throw new VerifyFileException(\"count\", tempFiles);\n  }\n  return tempFiles.map((tempFile) => {\n    if (tempFile.size > option.size) {\n      throw new VerifyFileException(\"size\", tempFile);\n    }\n    if (tempFile.type !== option.type) {\n      throw new VerifyFileException(\"type\", tempFile);\n    }\n    let ext = UrlParser.ext(tempFile.name);\n    if (option.exts?.length && !option.exts.includes(ext.toLowerCase())) {\n      throw new VerifyFileException(\"exts\", tempFile);\n    }\n    const resource = `${uuid()}_cos.${ext}`;\n    return {\n      size: tempFile.size,\n      ext,\n      name: tempFile.name,\n      type: tempFile.type,\n      path: tempFile.path,\n      time: tempFile.time,\n      urlPath: `${option.prefix}/${resource}`,\n      resource,\n    };\n  });\n}\n\nconst ossBucketMap = {\n  // record: \"https://campusrecord.welife001.com\",\n  // video: \"https://campusvideo.welife001.com\",\n  // img: \"https://campus002.welife001.com\",\n  // file: \"https://campusfile.welife001.com\",\n  answer_img: \"https://campus002.welife001.com\",\n  album: \"https://album.welife001.com\", //网盘相册\n  disk: \"https://disk.welife001.com\", //网盘文件\n  record: \"https://record.banjixiaoguanjia.com\",\n  video: \"https://video.banjixiaoguanjia.com\",\n  img: \"https://img.banjixiaoguanjia.com\",\n  file: \"https://file.banjixiaoguanjia.com\",\n};\n\nexport function spurl(key: string, cate: string) {\n  if (!key.startsWith(\"/\")) {\n    key = \"/\" + key;\n  }\n  return ossBucketMap[cate] + key;\n}\n\nexport function spurl2(\n  key: string,\n  joinCb: (key: string) => string = (k) => k\n) {\n  if (!key.startsWith(\"/\")) {\n    key = \"/\" + key;\n  }\n  return joinCb(key);\n}\n\nexport function transfromUploadAliyunFile(\n  files: FileMeta[],\n  option: any\n): UploadAliyunFile[] {\n  const typeToCate = {\n    all: \"disk\",\n    video: \"video\",\n    image: \"img\",\n    file: \"file\",\n  };\n\n  return files.map((file) => {\n    const cate = option.cate || typeToCate[file.type]; // 如果没有传入cate， 自动推算cate类型\n    const url = ossBucketMap[cate] + file.urlPath;\n    file.url = url;\n    return {\n      cate,\n      url,\n      file: file.path,\n      new_name: file.urlPath.substr(1),\n      size: file.size,\n      uploaded: false,\n    };\n  });\n}\n\nexport class UploadAliyunFile {\n  // TODO: 这是是 `utils/uploadoss/uploadAliyun.js` uploadFile 第一个参数的类型\n  //       目前的临时解决方案，之后封装了API之后修改\n  cate: Cate;\n  file: string;\n  new_name: string;\n  size: number;\n  duration?: number;\n  uploaded?: boolean;\n}\n","import { optionHander } from \"../utils/Function\";\nimport {\n  UploadHandler,\n  VerifyFileException,\n  VerifyContentHandler,\n  Cate,\n} from \"../core/UploadHandler\";\nimport {\n  UploadAliyunFile,\n  spurl,\n  spurl2,\n  transfromFileMeta,\n  transfromUploadAliyunFile,\n} from \"src/utils/tools\";\n\nexport class LocalChooseUploadHandlerOption {\n  exts: string[] = []; // 限制文件后缀，最后会传给微信API\n  count: number = 1; // 限制文件数量，最后会传给微信API\n  type: \"all\" | \"video\" | \"image\" | \"file\" = \"all\"; // 类型，给微信API的\n  cate?: Cate; // 会传给 aliyunOss 这个方法, 如果不传会通过type推算\n  size?: number = 1024 * 1024 * 3; // B, default 3MB 限制大小\n  prefix?: string = \"\"; // 资源路径前缀\n  uploadFileHandler: uploadFileHandler; // 上传文件的钩子函数\n  resolveHandler: resolveHandler; // 路径拼接函数\n  verifyContentHandler?: VerifyContentHandler = async () => true;\n}\n\nexport type uploadFileHandler = (\n  files: UploadAliyunFile[]\n) => Promise<string> | void;\n// 上传处理程序的约束\n\nexport type resolveHandler = (cate: Cate, key: string) => string;\n// 路径拼接的约束\n\nexport class LocalChooseUploadHandler extends UploadHandler<LocalChooseUploadHandlerOption> {\n  constructor(option: LocalChooseUploadHandlerOption) {\n    super(optionHander(option, new LocalChooseUploadHandlerOption()));\n  }\n\n  async upload() {\n    const self = this;\n    const tempFiles = await selectFile();\n    const files = transfromFileMeta(tempFiles, this.option());\n\n    const uploadAliyunFiles = await transfromUploadAliyunFile(\n      files,\n      this.option()\n    );\n\n    await this.option().uploadFileHandler(uploadAliyunFiles);\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      if (!(await this.option().verifyContentHandler(file))) {\n        throw new VerifyFileException(\"content\", file);\n      }\n      const aliFile = uploadAliyunFiles[i];\n      file.urlPath = spurl2(aliFile.new_name);\n      file.url = spurl2(file.urlPath, (key) =>\n        this.option().resolveHandler(aliFile.cate, key)\n      );\n      file.resource = file.urlPath;\n      file.uploaded = aliFile.uploaded;\n    }\n\n    return files;\n\n    async function selectFile() {\n      if (!wx.canIUse(\"chooseMessageFile\")) {\n        throw new CantUseApiException(\"chooseMessageFile\");\n      }\n\n      const { tempFiles } = await wx.chooseMessageFile({\n        count: self.option().count,\n        type: self.option().type,\n        extension: self.option().exts,\n      });\n\n      return tempFiles;\n    }\n  }\n\n  about() {}\n\n  destroy() {}\n}\n\nexport class CantUseApiException extends Error {\n  readonly name: string = \"CantUseApiException\";\n  type: string;\n  constructor(api: string) {\n    super(`Cant use ${api} because doesn't support it.`);\n    this.type = api;\n  }\n}\n\nexport class UploadFileException extends Error {\n  readonly name: string = \"ResponseStatusCodeException\";\n  type: string;\n  result: WechatMiniprogram.UploadFileSuccessCallbackResult;\n  constructor(res) {\n    super(`http status ${res.statuCode} not 2xx.`);\n    this.type = res.statuCode;\n    this.result = res;\n  }\n}\n","import { UrlParser } from \"./../utils/UrlParser\";\nimport { optionHander, sleep } from \"../utils/Function\";\nimport {\n  AboutException,\n  Cate,\n  FileMeta,\n  UploadHandler,\n  VerifyContentHandler,\n  VerifyFileException,\n} from \"../core/UploadHandler\";\n\nexport type CreateCodeHandler = (\n  uploadHandler: RemoteUploadHandler\n) => Promise<string>;\nexport type RemoveCodeHandler = (\n  code: string,\n  uploadHandler: RemoteUploadHandler\n) => Promise<void> | void;\nexport type ReadAssetUrlHandler = (\n  code: string,\n  uploadHandler: RemoteUploadHandler\n) => Promise<FileMeta[] | undefined | false>;\n\nexport class RemoteUploadHandlerOption {\n  exts: string[] = []; // 限制文件后缀\n  count: number = 1; // 限制文件数量\n  type: \"all\" | \"video\" | \"image\" | \"file\" = \"all\";\n  cate?: Cate;\n  size?: number = 1024 * 1024 * 3; // B, default 3MB\n  prefix?: string = \"\";\n  maxReadAssetUrlTimes?: number = 3000; // 限制轮询次数    - 弃用选项，请使用maxAge\n  sleepInterval?: number = 1000; // ms default 1s 轮询间隔 - 弃用选项，请使用maxAge\n  maxAge?: number = 5 * 60; // s default 5分钟 + Code过期时间\n  createCodeHandler: CreateCodeHandler; // 创建传输码的钩子\n  removeCodeHandler: RemoveCodeHandler; // 移除传输码的钩子\n  readAssetUrlHandler: ReadAssetUrlHandler; // 读取传输码的钩子\n  verifyContentHandler: VerifyContentHandler = async () => true; // 验证文件内容\n}\n\nexport enum RemoteHook {\n  CREATED_CODE = \"createdCode\",\n}\n\nexport class RemoteUploadHandler extends UploadHandler<\n  RemoteUploadHandlerOption,\n  RemoteHook\n> {\n  private _code: string;\n  private _codeExpriedAt: number; // 过期时间\n  private _aboutPool = false;\n  constructor(option: RemoteUploadHandlerOption) {\n    super(optionHander(option, new RemoteUploadHandlerOption()));\n  }\n\n  async upload(): Promise<FileMeta[]> {\n    const self = this;\n\n    const files = await pool();\n    await verifyFile(files);\n\n    if (this._code) await this.option().removeCodeHandler(this._code, this);\n    this._code = \"\";\n\n    return files;\n    async function pool() {\n      while (true) {\n        const code = await self.option().createCodeHandler(self);\n        self._codeExpriedAt = Date.now() + self.option().maxAge * 1000;\n        self.hook().emit(RemoteHook.CREATED_CODE, code);\n        self._code = code;\n        while (self._codeExpriedAt >= Date.now()) {\n          if (self._aboutPool) {\n            self._aboutPool = false;\n            if (self._code)\n              await self.option().removeCodeHandler(self._code, self);\n            self._code = \"\";\n            throw new AboutException();\n          }\n          const urls = await self.option().readAssetUrlHandler(code, self);\n          if (urls === false) {\n            return [];\n          }\n          if (urls) {\n            return urls;\n          }\n          await sleep(1000);\n        }\n      }\n      return [];\n    }\n\n    async function verifyFile(files: FileMeta[]) {\n      if (files.length > self.option().count) {\n        throw new VerifyFileException(\"count\", files);\n      }\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        if (!self.option().exts.includes(file.ext.toLowerCase())) {\n          throw new VerifyFileException(\"ext\", file);\n        }\n        if (!(await self.option().verifyContentHandler(file))) {\n          throw new VerifyFileException(\"content\", file);\n        }\n      }\n    }\n  }\n\n  destroy() {\n    this.about();\n  }\n\n  async about() {\n    this._aboutPool = true;\n    if (this._code) await this.option().removeCodeHandler(this._code, this);\n    this._code = \"\";\n  }\n}\n","import { optionHander } from \"../utils/Function\";\nimport {\n  UploadHandler,\n  VerifyFileException,\n  VerifyContentHandler,\n  Cate,\n} from \"../core/UploadHandler\";\nimport { uploadFileHandler, type resolveHandler } from \"src\";\nimport {\n  spurl2,\n  transfromFileMeta,\n  transfromUploadAliyunFile,\n} from \"../utils/tools\";\n\nexport class LocalUploadHandlerOption {\n  exts: string[] = []; // 限制文件后缀，最后会传给微信API\n  count: number = 1; // 限制文件数量，最后会传给微信API\n  type: \"all\" | \"video\" | \"image\" | \"file\" = \"all\"; // 类型，给微信API的\n  cate?: Cate; // 会传给 aliyunOss 这个方法, 如果不传会通过type推算\n  size?: number = 1024 * 1024 * 3; // B, default 3MB 限制大小\n  prefix?: string = \"\"; // 资源路径前缀\n  uploadFileHandler: uploadFileHandler; // 上传文件的钩子函数\n  resolveHandler: resolveHandler; // 路径拼接函数\n  verifyContentHandler?: VerifyContentHandler = async () => true;\n}\n\nexport class LocalUploadHandler extends UploadHandler<LocalUploadHandlerOption> {\n  constructor(option: LocalUploadHandlerOption) {\n    super(optionHander(option, new LocalUploadHandlerOption()));\n  }\n\n  async upload(tempFiles?: WechatMiniprogram.ChooseFile[]) {\n    const self = this;\n    const files = transfromFileMeta(tempFiles, this.option());\n\n    const uploadAliyunFiles = await transfromUploadAliyunFile(\n      files,\n      this.option()\n    );\n\n    await this.option().uploadFileHandler(uploadAliyunFiles);\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      if (!(await this.option().verifyContentHandler(file))) {\n        throw new VerifyFileException(\"content\", file);\n      }\n      const aliFile = uploadAliyunFiles[i];\n      file.urlPath = spurl2(aliFile.new_name);\n      file.url = spurl2(file.urlPath, (key) =>\n        this.option().resolveHandler(aliFile.cate, key)\n      );\n      file.resource = file.urlPath;\n      file.uploaded = aliFile.uploaded;\n    }\n\n    return files;\n  }\n\n  about() {}\n\n  destroy() {}\n}\n","export function urlParser(obj: any): string {\n  return Object.keys(obj)\n    .reduce((acc: any, key: string) => {\n      acc.push(`${key}=${obj[key]}`);\n      return acc;\n    }, [])\n    .join(\"&\");\n}\n","import { UrlParser } from \"./../utils/UrlParser\";\nimport { optionHander, sleep } from \"../utils/Function\";\nimport {\n  AboutException,\n  Cate,\n  FileMeta,\n  UploadHandler,\n  VerifyContentHandler,\n  VerifyFileException,\n} from \"../core/UploadHandler\";\nimport { urlParser } from \"src/utils/urlParams\";\nimport {\n  UploadAliyunFile,\n  spurl,\n  spurl2,\n  transfromUploadAliyunFile,\n} from \"src/utils/tools\";\nimport {\n  uploadFileHandler,\n  type resolveHandler,\n} from \"./LocalChooseUploadHandler\";\n\nexport type OAuthHandlerRes = {\n  access_token: string;\n  token_type: \"Bearer\";\n  expires_in: number;\n  refresh_token: string; // 1 年有效期\n  user_id: string;\n  scope: string;\n  client_id: string;\n};\n\nexport type OAuthHandler = (\n  oAuthHandlerRes?: OAuthHandlerRes // 有传这个字段表示要刷新token\n) => Promise<OAuthHandlerRes>;\n\nexport class QQDocUploadHandlerOption {\n  exts: string[] = []; // 限制文件后缀\n  count: number = 1; // 限制文件数量\n  type: \"file\" = \"file\";\n  prefix?: string = \"\";\n  transfer?: boolean; // 是否转存\n  oauthHandler: OAuthHandler; // 获取token的钩子函数\n  selectFileView?: (\n    fetch: (type: \"next\") => Promise<FileMeta[]>\n  ) => Promise<FileMeta[]>; // 有传这个字段表示要刷新token\n  verifyContentHandler: VerifyContentHandler = async () => true; // 验证文件内容\n  uploadFileHandler: uploadFileHandler; // 上传文件的钩子函数\n  resolveHandler: resolveHandler;\n}\n\nexport enum QQDocHook {\n  GET_TOKEN_OK = \"getTokenOk\",\n  BEFORE_FILTER = \"beforeFilter\",\n  AFTER_FILTER = \"afterFilter\",\n  TRANSFER_OK = \"transferOk\",\n  TRANSFER_BEGIN = \"transferBegin\",\n  TRANSFER_END = \"transferEnd\",\n  TRANSFER_ING = \"transferIng\",\n}\n\n/**\n * 腾讯文档上传处理器\n */\nexport class QQDocUploadHandler extends UploadHandler<\n  QQDocUploadHandlerOption,\n  QQDocHook\n> {\n  private _token: OAuthHandlerRes;\n  private _aboutPool = false;\n  constructor(option: QQDocUploadHandlerOption) {\n    super(optionHander(option, new QQDocUploadHandlerOption()));\n  }\n\n  async upload(): Promise<FileMeta[]> {\n    const self = this;\n\n    const token = await this.option().oauthHandler(this._token);\n    this._token = token;\n    self.hook().emit(QQDocHook.GET_TOKEN_OK, token);\n\n    let next = 0;\n    let isMore = true;\n    const selectFiles = await this.option().selectFileView(() => {\n      if (isMore === false) {\n        return Promise.resolve([]);\n      }\n      const opt = {\n        fileType: \"doc-slide-sheet-pdf\",\n        limit: 20,\n        start: next,\n      };\n      self.hook().emit(QQDocHook.BEFORE_FILTER, opt);\n\n      return self.driveFilter(opt).then((res) => {\n        next = res.next;\n        if (next === 0) {\n          isMore = false;\n        }\n        self.hook().emit(QQDocHook.AFTER_FILTER, res);\n        return res.list.map((item) => {\n          const ext = {\n            doc: \"doc\",\n            sheet: \"xls\",\n            slide: \"ppt\",\n            pdf: \"pdf\",\n            mind: \"mind\",\n            folder: \"folder\",\n            shortcut: \"shortcut\",\n          }[item.type];\n          return {\n            id: item.ID,\n            name: item.title + \".\" + ext,\n            ext: ext,\n            size: 0,\n            url: item.url,\n            urlPath: item.url,\n            path: item.url,\n            type: item.type === \"folder\" ? \"folder\" : \"file\",\n            creatorName: item.creatorName,\n            time: item.createTime * 1000,\n            uploaded: true,\n            _raw_: item,\n          } as FileMeta;\n        });\n      });\n    });\n\n    // await verifyFile(selectFiles);\n\n    if (this.option().transfer) await this.transfer(selectFiles);\n\n    return selectFiles;\n\n    async function verifyFile(files: FileMeta[]) {\n      if (files.length > self.option().count) {\n        throw new VerifyFileException(\"count\", files);\n      }\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        if (!self.option().exts.includes(file.ext.toLowerCase())) {\n          throw new VerifyFileException(\"ext\", file);\n        }\n        if (!(await self.option().verifyContentHandler(file))) {\n          throw new VerifyFileException(\"content\", file);\n        }\n      }\n    }\n  }\n\n  private async transfer(files: FileMeta[]) {\n    const self = this;\n    const prefix = this.option().prefix || \"\";\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      file.uploaded = false;\n      // const fileID = await this.request<{ data: { fileID: string } }>(\n      //   `/openapi/drive/v2/util/converter?type=2&value=${file._raw_.ID}`\n      // );\n      const task = await this.request<{ data: { operationID: string } }>(\n        `/openapi/drive/v2/files/${file._raw_.ID}/async-export`,\n        {},\n        \"POST\"\n      );\n      this.hook().emit(QQDocHook.TRANSFER_BEGIN, task);\n      while (true) {\n        const res = await this.request<{\n          data: { status: string; url: string };\n        }>(\n          `/openapi/drive/v2/files/${file._raw_.ID}/export-progress?operationID=${task.data.data.operationID}`\n        );\n        this.hook().emit(QQDocHook.TRANSFER_ING, res);\n\n        if (res.data.data.url) {\n          const downRes: any = await new Promise((resolve, reject) =>\n            wx.downloadFile({\n              url: res.data.data.url,\n              success: resolve,\n              fail: reject,\n            })\n          );\n          const tempFilePath = downRes.tempFilePath;\n          const xgjFile: UploadAliyunFile = {\n            cate: \"file\",\n            file: tempFilePath,\n            new_name: prefix + file._raw_.ID + \"/\" + file.name,\n            size: 0,\n          };\n          await this.option().uploadFileHandler([xgjFile]);\n\n          file.urlPath = spurl2(xgjFile.new_name);\n          file.url = spurl2(xgjFile.new_name, (key) =>\n            self.option().resolveHandler(xgjFile.cate, key)\n          );\n          file.uploaded = true;\n          this.hook().emit(QQDocHook.TRANSFER_END, downRes);\n\n          break;\n        }\n\n        await sleep(1000);\n      }\n    }\n  }\n\n  private async driveFilter(opt: {\n    listType?: string;\n    sortType?: string;\n    asc?: number;\n    folderID?: string;\n    start?: number;\n    limit?: number;\n    isOwner?: number;\n    fileType?: string;\n  }) {\n    // listType\tstring\t否\t见列表类型，默认为 folder\n    // sortType\tstring\t否\t见排序类型，默认为 browse\n    // asc\tinteger\t否\t是否正序排列，1：正序，0：倒序，默认为 0\n    // folderID\tstring\t否\t文件夹唯一标识，根目录 folderID 为 /。默认为 /\n    // start\tinteger\t否\t开始值，第一次填 0，后续填 next 的值\n    // limit\tinteger\t否\t拉取数，上限为 20\n    // isOwner\tinteger\t否\t根据请求者是否为文件拥有者进行过滤，1：返回所有文件，2：返回请求者拥有的文件，默认为返回所有文件\n    // fileType\tstring\t否\t指定要拉取的文件品类，可传多个，用减号 - 分割，默认为拉取所有品类。见文件类型\n    const res = await this.request<{\n      data: { next: number; list: FileItem[] };\n      ret: number;\n    }>(`/openapi/drive/v2/filter?${urlParser(opt)}`);\n    return res.data.data;\n  }\n\n  private request<R>(path: string, data?: any, method: any = \"GET\") {\n    return new Promise<{ status: number; data: R }>((resolve, reject) => {\n      const baseUrl = \"https://docs.qq.com\";\n      wx.request({\n        url: baseUrl + path,\n        method,\n        data,\n        header: {\n          \"Access-Token\": this._token.access_token,\n          \"Client-Id\": this._token.client_id,\n          \"Open-Id\": this._token.user_id,\n        },\n        success: (res) =>\n          resolve({ status: res.statusCode, data: res.data as R }),\n        fail: reject,\n      });\n    });\n  }\n\n  destroy() {\n    this.about();\n  }\n\n  async about() {\n    this._aboutPool = true;\n  }\n}\n\n// ID\tstring\t文档或文件夹唯一标识，详见fileID，文档的源文件 ID。快捷方式 ID 见 shortcutID\n// title\tstring\t文档标题\n// type\tstring\t见文件类型\n// url\tstring\t文档 / 文件夹链接\n// status\tstring\t文档状态\n// NORMAL: 状态正常\n// TRASH：在回收站\n// fileSource\tstring\t文件来源，详见文件来源说明\n// isCreator\tboolean\t是否是文件创建者\n// createTime\tinteger\t文档创建时间\n// creatorName\tstring\t文档创建者昵称\n// isOwner\tboolean\t是否是文件拥有者\n// ownerName\tstring\t文档所有者昵称\n// lastModifyTime\tinteger\t文档最后修改时间\n// lastBrowseTime\tinteger\t在当前列表中的最后浏览时间\n// starred\tboolean\t是否为星标文件，文件夹不会返回\n// pinned\tboolean\t在当前列表中是否被置顶，文件夹不会返回\n// shortcutID\tstring\t快捷方式 ID。如果不为空，则说明为快捷方式文档。\n// isCollaborated\tboolean\t是否为协作文件，文件夹不返回\ntype FileItem = {\n  ID: string;\n  title: string;\n  type: string;\n  url: string;\n  status: string;\n  fileSource: string;\n  isCreator: boolean;\n  createTime: number;\n  creatorName: string;\n  isOwner: boolean;\n  ownerName: string;\n  lastModifyTime: number;\n  lastBrowseTime: number;\n  starred: boolean;\n  pinned: boolean;\n  shortcutID: string;\n  isCollaborated: boolean;\n};\n\nfunction etFilePath(url: string) {\n  const idx = url.indexOf(\".com/\");\n  return url.substring(idx + 4);\n}\n"],"names":[],"mappings":"SAAgB,YAAY,CAAI,MAAS,EAAE,gBAAqB,EAAE,EAAA;IAChE,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QACzC,OAAO,MAAM,IAAI,aAAa,CAAC;KAChC;IACD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,KAAI;AAC/B,QAAA,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACxB,QAAA,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAClC,YAAA,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;SACzD;aAAM;AACL,YAAA,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;SACjB;AACD,QAAA,OAAO,IAAI,CAAC;KACb,EAAE,aAAa,CAAC,CAAC;AACpB,CAAC;AAEK,SAAU,KAAK,CAAC,QAAQ,EAAA;AAC5B,IAAA,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;AACjE;;MClBa,QAAQ,CAAA;AAEX,IAAA,OAAO,GAAG,IAAI,GAAG,EAA2B,CAAC;IAErD,EAAE,CAAc,GAAM,EAAE,EAAc,EAAA;QACpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC;SAChC;AACD,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC9B,QAAA,OAAO,IAAI,CAAC;KACb;IAED,GAAG,CAAC,GAAM,EAAE,EAAc,EAAA;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC1B,YAAA,OAAO,IAAI,CAAC;SACb;AAED,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAEjC,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,MAAM,CAAC,GAAM,EAAA;QACX,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC1B,YAAA,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KAC1B;IAED,IAAI,CAAC,GAAM,EAAE,EAAc,EAAA;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC;SAChC;QACD,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,EAAA;AAC1C,YAAA,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AACZ,YAAA,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACnB,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,IAAI,CAAC,GAAM,EAAE,GAAG,IAAW,EAAA;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC1B,YAAA,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;KAClD;IAED,MAAM,GAAA;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,MAAM,SAAS,CAAC,GAAM,EAAE,GAAG,IAAW,EAAA;QACpC,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;KAC1D;AAEF,CAAA;AAGD;;IC1DY,WASX;AATD,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;;AAEnB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;AACrB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;;AAEf,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACf,CAAC,EATW,UAAU,KAAV,UAAU,GASrB,EAAA,CAAA,CAAA,CAAA;MA2CqB,aAAa,CAAA;AACzB,IAAA,KAAK,GAAG,IAAI,QAAQ,EAAK,CAAC;AAC1B,IAAA,OAAO,CAAI;AAEnB,IAAA,WAAA,CAAY,MAAS,EAAA;AACnB,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KACrB;AAED,IAAA,MAAM,CAAC,MAAU,EAAA;QACf,IAAI,MAAM,EAAE;AACV,YAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACvB;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED;;;AAGG;AACH,IAAA,IAAI,CAAC,IAAe,EAAA;QAClB,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AAED;;;AAGG;AACH,IAAA,MAAM,CAAC,SAA0C,EAAA;AAC/C,QAAA,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC5C;AAED;;;AAGG;IACH,OAAO,GAAA;AACL,QAAA,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC5C;IAED,KAAK,GAAA;AACH,QAAA,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC5C;AACF,CAAA;AAEK,MAAO,mBAAoB,SAAQ,KAAK,CAAA;IACnC,IAAI,GAAW,qBAAqB,CAAC;AAC9C,IAAA,IAAI,CAAS;AACb,IAAA,IAAI,CAA+B;IACnC,WAAY,CAAA,IAAI,EAAE,IAAI,EAAA;AACpB,QAAA,KAAK,CAAC,CAAA,KAAA,EAAQ,IAAI,CAAA,gBAAA,CAAkB,CAAC,CAAC;AACtC,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;AACF,CAAA;AAEK,MAAO,cAAe,SAAQ,KAAK,CAAA;AACvC,IAAA,IAAI,CAAS;AACb,IAAA,WAAA,GAAA;QACE,KAAK,CAAC,CAAW,SAAA,CAAA,CAAC,CAAC;AACnB,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;KACrB;AACF;;MC3GY,QAAQ,CAAA;AACX,IAAA,cAAc,CAAmB;AACjC,IAAA,OAAO,CAAI;AACX,IAAA,MAAM,CAAU;AAExB;;;AAGG;IACH,WAAY,CAAA,aAA2C,EAAE,MAAU,EAAA;AACjE,QAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;KAC/C;AAED;;;;;AAKG;IACH,iBAAiB,CACf,iBAA+C,EAC/C,MAAU,EAAA;QAEV,IACE,IAAI,CAAC,cAAc;AACnB,YAAA,IAAI,CAAC,cAAc,YAAY,iBAAiB,EAChD;AACA,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAA,IAAI,IAAI,CAAC,cAAc,EAAE;AACvB,YAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AAC5B,YAAA,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SACnC;QACD,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAI,EAAE,IAAI,CAAC,cAAc,YAAY,iBAAiB,CAAC,EAAE;AACvD,YAAA,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;SAClE;AAED,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAE/D,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;AAGG;AACH,IAAA,MAAM,CAAC,SAA0C,EAAA;AAC/C,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,OAAO,IAAI,CAAC;SACb;AACD,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,QAAA,IAAI,CAAC,cAAc;aAChB,MAAM,CAAC,SAAS,CAAC;AACjB,aAAA,IAAI,CAAC,CAAC,GAAG,KAAI;AACZ,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AAC1D,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AAC9D,SAAC,CAAC;AACD,aAAA,KAAK,CAAC,CAAC,GAAG,KAAI;AACb,YAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC9D,SAAC,CAAC,CAAC;AACL,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;;AAKG;IACH,EAAE,CAAuB,IAAO,EAAE,EAAa,EAAA;AAC7C,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACxC,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;;AAKG;IACH,GAAG,CAAuB,IAAO,EAAE,EAAa,EAAA;AAC9C,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACzC,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;;AAKG;IACH,IAAI,CAAuB,IAAO,EAAE,EAAa,EAAA;AAC/C,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC1C,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;AAEK;IACL,IAAI,GAAA;QACF,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,YAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,IAAI,KAAI;gBACvC,IAAI,GAAG,EAAE;AACP,oBAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;iBACpB;gBACD,OAAO,CAAC,IAAI,CAAC,CAAC;AAChB,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AAED;;;AAGG;AACH,IAAA,MAAM,CAAC,MAAU,EAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KAC3C;AAED;;;AAGG;IACH,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;AAC9B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACtD,QAAA,IAAI,CAAC,cAAc;AAChB,aAAA,IAAI,EAAE;AACN,aAAA,MAAM,EAAE;aACR,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5D;IAED,KAAK,GAAA;AACH,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;AAC5B,YAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACnD;AACD,QAAA,OAAO,IAAI,CAAC;KACb;AAED,IAAA,aAAa,CAAC,OAAqC,EAAA;QACjD,IAAI,OAAO,EAAE;AACX,YAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;AACF;;ACrKD,IAAI,KAAK,GACP,gEAAgE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAEvE,SAAU,IAAI,CAAC,GAAY,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,EAAA;AACrD,IAAA,IAAI,KAAK,GAAG,KAAK,EACf,IAAI,GAAG,EAAE,CAAC;IACZ,IAAI,GAAG,EAAE;QACP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;KAC5E;SAAM;AACL,QAAA,IAAI,CAAC,CAAC;QACN,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AAC/C,QAAA,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;AACf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBACZ,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;aACtD;SACF;KACF;AACD,IAAA,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvB;;MCVa,SAAS,CAAA;IACpB,OAAO,KAAK,CAAC,GAAW,EAAA;QACtB,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/B,OAAO;YACL,GAAG;YACH,GAAG;SACJ,CAAC;KACH;IAED,OAAO,GAAG,CAAC,GAAW,EAAA;AACpB,QAAA,MAAM,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACjD,QAAA,OAAO,GAAG,CAAC;KACZ;AACF;;SCnBe,iBAAiB,CAC/B,SAA4C,GAAA,EAAE,EAC9C,MAAW,EAAA;IAEX,IAAI,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE;AACnC,QAAA,MAAM,IAAI,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KACnD;AACD,IAAA,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAI;QAChC,IAAI,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE;AAC/B,YAAA,MAAM,IAAI,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SACjD;QACD,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;AACjC,YAAA,MAAM,IAAI,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SACjD;QACD,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvC,QAAA,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,EAAE;AACnE,YAAA,MAAM,IAAI,mBAAmB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SACjD;QACD,MAAM,QAAQ,GAAG,CAAG,EAAA,IAAI,EAAE,CAAQ,KAAA,EAAA,GAAG,EAAE,CAAC;QACxC,OAAO;YACL,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,GAAG;YACH,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,IAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,YAAA,OAAO,EAAE,CAAG,EAAA,MAAM,CAAC,MAAM,CAAA,CAAA,EAAI,QAAQ,CAAE,CAAA;YACvC,QAAQ;SACT,CAAC;AACJ,KAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,YAAY,GAAG;;;;;AAKnB,IAAA,UAAU,EAAE,iCAAiC;IAC7C,KAAK,EAAE,6BAA6B;IACpC,IAAI,EAAE,4BAA4B;AAClC,IAAA,MAAM,EAAE,qCAAqC;AAC7C,IAAA,KAAK,EAAE,oCAAoC;AAC3C,IAAA,GAAG,EAAE,kCAAkC;AACvC,IAAA,IAAI,EAAE,mCAAmC;CAC1C,CAAC;AASI,SAAU,MAAM,CACpB,GAAW,EACX,MAAkC,GAAA,CAAC,CAAC,KAAK,CAAC,EAAA;IAE1C,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACxB,QAAA,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;KACjB;AACD,IAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC;AAEe,SAAA,yBAAyB,CACvC,KAAiB,EACjB,MAAW,EAAA;AAEX,IAAA,MAAM,UAAU,GAAG;AACjB,QAAA,GAAG,EAAE,MAAM;AACX,QAAA,KAAK,EAAE,OAAO;AACd,QAAA,KAAK,EAAE,KAAK;AACZ,QAAA,IAAI,EAAE,MAAM;KACb,CAAC;AAEF,IAAA,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAI;AACxB,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;AAC9C,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,OAAO;YACL,IAAI;YACJ,GAAG;YACH,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAChC,IAAI,EAAE,IAAI,CAAC,IAAI;AACf,YAAA,QAAQ,EAAE,KAAK;SAChB,CAAC;AACJ,KAAC,CAAC,CAAC;AACL;;MC5Ea,8BAA8B,CAAA;AACzC,IAAA,IAAI,GAAa,EAAE,CAAC;AACpB,IAAA,KAAK,GAAW,CAAC,CAAC;AAClB,IAAA,IAAI,GAAuC,KAAK,CAAC;IACjD,IAAI,CAAQ;IACZ,IAAI,GAAY,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAChC,IAAA,MAAM,GAAY,EAAE,CAAC;IACrB,iBAAiB,CAAoB;IACrC,cAAc,CAAiB;AAC/B,IAAA,oBAAoB,GAA0B,YAAY,IAAI,CAAC;AAChE,CAAA;AAQD;AAEM,MAAO,wBAAyB,SAAQ,aAA6C,CAAA;AACzF,IAAA,WAAA,CAAY,MAAsC,EAAA;QAChD,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,8BAA8B,EAAE,CAAC,CAAC,CAAC;KACnE;AAED,IAAA,MAAM,MAAM,GAAA;QACV,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,QAAA,MAAM,SAAS,GAAG,MAAM,UAAU,EAAE,CAAC;QACrC,MAAM,KAAK,GAAG,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAE1D,QAAA,MAAM,iBAAiB,GAAG,MAAM,yBAAyB,CACvD,KAAK,EACL,IAAI,CAAC,MAAM,EAAE,CACd,CAAC;QAEF,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;AAEzD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,YAAA,IAAI,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE;AACrD,gBAAA,MAAM,IAAI,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAChD;AACD,YAAA,MAAM,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACxC,YAAA,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,KAClC,IAAI,CAAC,MAAM,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAChD,CAAC;AACF,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;AAC7B,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SAClC;AAED,QAAA,OAAO,KAAK,CAAC;AAEb,QAAA,eAAe,UAAU,GAAA;YACvB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,mBAAmB,CAAC,EAAE;AACpC,gBAAA,MAAM,IAAI,mBAAmB,CAAC,mBAAmB,CAAC,CAAC;aACpD;YAED,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE,CAAC,iBAAiB,CAAC;AAC/C,gBAAA,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK;AAC1B,gBAAA,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI;AACxB,gBAAA,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI;AAC9B,aAAA,CAAC,CAAC;AAEH,YAAA,OAAO,SAAS,CAAC;SAClB;KACF;AAED,IAAA,KAAK,MAAK;AAEV,IAAA,OAAO,MAAK;AACb,CAAA;AAEK,MAAO,mBAAoB,SAAQ,KAAK,CAAA;IACnC,IAAI,GAAW,qBAAqB,CAAC;AAC9C,IAAA,IAAI,CAAS;AACb,IAAA,WAAA,CAAY,GAAW,EAAA;AACrB,QAAA,KAAK,CAAC,CAAA,SAAA,EAAY,GAAG,CAAA,4BAAA,CAA8B,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;KACjB;AACF,CAAA;AAEK,MAAO,mBAAoB,SAAQ,KAAK,CAAA;IACnC,IAAI,GAAW,6BAA6B,CAAC;AACtD,IAAA,IAAI,CAAS;AACb,IAAA,MAAM,CAAoD;AAC1D,IAAA,WAAA,CAAY,GAAG,EAAA;AACb,QAAA,KAAK,CAAC,CAAe,YAAA,EAAA,GAAG,CAAC,SAAS,CAAA,SAAA,CAAW,CAAC,CAAC;AAC/C,QAAA,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC;AAC1B,QAAA,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;KACnB;AACF;;MCnFY,yBAAyB,CAAA;AACpC,IAAA,IAAI,GAAa,EAAE,CAAC;AACpB,IAAA,KAAK,GAAW,CAAC,CAAC;IAClB,IAAI,GAAuC,KAAK,CAAC;AACjD,IAAA,IAAI,CAAQ;IACZ,IAAI,GAAY,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;IAChC,MAAM,GAAY,EAAE,CAAC;AACrB,IAAA,oBAAoB,GAAY,IAAI,CAAC;AACrC,IAAA,aAAa,GAAY,IAAI,CAAC;AAC9B,IAAA,MAAM,GAAY,CAAC,GAAG,EAAE,CAAC;IACzB,iBAAiB,CAAoB;IACrC,iBAAiB,CAAoB;IACrC,mBAAmB,CAAsB;IACzC,oBAAoB,GAAyB,YAAY,IAAI,CAAC;AAC/D,CAAA;IAEW,WAEX;AAFD,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,aAA4B,CAAA;AAC9B,CAAC,EAFW,UAAU,KAAV,UAAU,GAErB,EAAA,CAAA,CAAA,CAAA;AAEK,MAAO,mBAAoB,SAAQ,aAGxC,CAAA;AACS,IAAA,KAAK,CAAS;IACd,cAAc,CAAS;IACvB,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAA,WAAA,CAAY,MAAiC,EAAA;QAC3C,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,yBAAyB,EAAE,CAAC,CAAC,CAAC;KAC9D;AAED,IAAA,MAAM,MAAM,GAAA;QACV,MAAM,IAAI,GAAG,IAAI,CAAC;AAElB,QAAA,MAAM,KAAK,GAAG,MAAM,IAAI,EAAE,CAAC;AAC3B,QAAA,MAAM,UAAU,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,IAAI,CAAC,KAAK;AAAE,YAAA,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAEhB,QAAA,OAAO,KAAK,CAAC;AACb,QAAA,eAAe,IAAI,GAAA;YACjB,OAAO,IAAI,EAAE;AACX,gBAAA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC;AAC/D,gBAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAChD,gBAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,GAAG,EAAE,EAAE;AACxC,oBAAA,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,wBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,IAAI,IAAI,CAAC,KAAK;AACZ,4BAAA,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC1D,wBAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;wBAChB,MAAM,IAAI,cAAc,EAAE,CAAC;qBAC5B;AACD,oBAAA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjE,oBAAA,IAAI,IAAI,KAAK,KAAK,EAAE;AAClB,wBAAA,OAAO,EAAE,CAAC;qBACX;oBACD,IAAI,IAAI,EAAE;AACR,wBAAA,OAAO,IAAI,CAAC;qBACb;AACD,oBAAA,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;iBACnB;aACF;AACD,YAAA,OAAO,EAAE,CAAC;SACX;QAED,eAAe,UAAU,CAAC,KAAiB,EAAA;YACzC,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;AACtC,gBAAA,MAAM,IAAI,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aAC/C;AACD,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,gBAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,gBAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,EAAE;AACxD,oBAAA,MAAM,IAAI,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;iBAC5C;AACD,gBAAA,IAAI,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE;AACrD,oBAAA,MAAM,IAAI,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;iBAChD;aACF;SACF;KACF;IAED,OAAO,GAAA;QACL,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;AAED,IAAA,MAAM,KAAK,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,KAAK;AAAE,YAAA,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACjB;AACF;;MCtGY,wBAAwB,CAAA;AACnC,IAAA,IAAI,GAAa,EAAE,CAAC;AACpB,IAAA,KAAK,GAAW,CAAC,CAAC;AAClB,IAAA,IAAI,GAAuC,KAAK,CAAC;IACjD,IAAI,CAAQ;IACZ,IAAI,GAAY,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAChC,IAAA,MAAM,GAAY,EAAE,CAAC;IACrB,iBAAiB,CAAoB;IACrC,cAAc,CAAiB;AAC/B,IAAA,oBAAoB,GAA0B,YAAY,IAAI,CAAC;AAChE,CAAA;AAEK,MAAO,kBAAmB,SAAQ,aAAuC,CAAA;AAC7E,IAAA,WAAA,CAAY,MAAgC,EAAA;QAC1C,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,wBAAwB,EAAE,CAAC,CAAC,CAAC;KAC7D;IAED,MAAM,MAAM,CAAC,SAA0C,EAAA;QAErD,MAAM,KAAK,GAAG,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAE1D,QAAA,MAAM,iBAAiB,GAAG,MAAM,yBAAyB,CACvD,KAAK,EACL,IAAI,CAAC,MAAM,EAAE,CACd,CAAC;QAEF,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;AAEzD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,YAAA,IAAI,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE;AACrD,gBAAA,MAAM,IAAI,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAChD;AACD,YAAA,MAAM,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACxC,YAAA,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,KAClC,IAAI,CAAC,MAAM,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAChD,CAAC;AACF,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;AAC7B,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SAClC;AAED,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,KAAK,MAAK;AAEV,IAAA,OAAO,MAAK;AACb;;AC9DK,SAAU,SAAS,CAAC,GAAQ,EAAA;AAChC,IAAA,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACpB,SAAA,MAAM,CAAC,CAAC,GAAQ,EAAE,GAAW,KAAI;AAChC,QAAA,GAAG,CAAC,IAAI,CAAC,CAAA,EAAG,GAAG,CAAA,CAAA,EAAI,GAAG,CAAC,GAAG,CAAC,CAAE,CAAA,CAAC,CAAC;AAC/B,QAAA,OAAO,GAAG,CAAC;KACZ,EAAE,EAAE,CAAC;SACL,IAAI,CAAC,GAAG,CAAC,CAAC;AACf;;MC6Ba,wBAAwB,CAAA;AACnC,IAAA,IAAI,GAAa,EAAE,CAAC;AACpB,IAAA,KAAK,GAAW,CAAC,CAAC;IAClB,IAAI,GAAW,MAAM,CAAC;IACtB,MAAM,GAAY,EAAE,CAAC;IACrB,QAAQ,CAAW;IACnB,YAAY,CAAe;IAC3B,cAAc,CAEW;IACzB,oBAAoB,GAAyB,YAAY,IAAI,CAAC;IAC9D,iBAAiB,CAAoB;AACrC,IAAA,cAAc,CAAiB;AAChC,CAAA;IAEW,UAQX;AARD,CAAA,UAAY,SAAS,EAAA;AACnB,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,YAA2B,CAAA;AAC3B,IAAA,SAAA,CAAA,eAAA,CAAA,GAAA,cAA8B,CAAA;AAC9B,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,aAA4B,CAAA;AAC5B,IAAA,SAAA,CAAA,aAAA,CAAA,GAAA,YAA0B,CAAA;AAC1B,IAAA,SAAA,CAAA,gBAAA,CAAA,GAAA,eAAgC,CAAA;AAChC,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,aAA4B,CAAA;AAC5B,IAAA,SAAA,CAAA,cAAA,CAAA,GAAA,aAA4B,CAAA;AAC9B,CAAC,EARW,SAAS,KAAT,SAAS,GAQpB,EAAA,CAAA,CAAA,CAAA;AAED;;AAEG;AACG,MAAO,kBAAmB,SAAQ,aAGvC,CAAA;AACS,IAAA,MAAM,CAAkB;IACxB,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAA,WAAA,CAAY,MAAgC,EAAA;QAC1C,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,wBAAwB,EAAE,CAAC,CAAC,CAAC;KAC7D;AAED,IAAA,MAAM,MAAM,GAAA;QACV,MAAM,IAAI,GAAG,IAAI,CAAC;AAElB,QAAA,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5D,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEhD,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,cAAc,CAAC,MAAK;AAC1D,YAAA,IAAI,MAAM,KAAK,KAAK,EAAE;AACpB,gBAAA,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aAC5B;AACD,YAAA,MAAM,GAAG,GAAG;AACV,gBAAA,QAAQ,EAAE,qBAAqB;AAC/B,gBAAA,KAAK,EAAE,EAAE;AACT,gBAAA,KAAK,EAAE,IAAI;aACZ,CAAC;AACF,YAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;AAE/C,YAAA,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAI;AACxC,gBAAA,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AAChB,gBAAA,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,MAAM,GAAG,KAAK,CAAC;iBAChB;AACD,gBAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAC9C,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAI;AAC3B,oBAAA,MAAM,GAAG,GAAG;AACV,wBAAA,GAAG,EAAE,KAAK;AACV,wBAAA,KAAK,EAAE,KAAK;AACZ,wBAAA,KAAK,EAAE,KAAK;AACZ,wBAAA,GAAG,EAAE,KAAK;AACV,wBAAA,IAAI,EAAE,MAAM;AACZ,wBAAA,MAAM,EAAE,QAAQ;AAChB,wBAAA,QAAQ,EAAE,UAAU;AACrB,qBAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACb,OAAO;wBACL,EAAE,EAAE,IAAI,CAAC,EAAE;AACX,wBAAA,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG;AAC5B,wBAAA,GAAG,EAAE,GAAG;AACR,wBAAA,IAAI,EAAE,CAAC;wBACP,GAAG,EAAE,IAAI,CAAC,GAAG;wBACb,OAAO,EAAE,IAAI,CAAC,GAAG;wBACjB,IAAI,EAAE,IAAI,CAAC,GAAG;AACd,wBAAA,IAAI,EAAE,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,MAAM;wBAChD,WAAW,EAAE,IAAI,CAAC,WAAW;AAC7B,wBAAA,IAAI,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI;AAC5B,wBAAA,QAAQ,EAAE,IAAI;AACd,wBAAA,KAAK,EAAE,IAAI;qBACA,CAAC;AAChB,iBAAC,CAAC,CAAC;AACL,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;;AAIH,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ;AAAE,YAAA,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAE7D,QAAA,OAAO,WAAW,CAAC;KAgBpB;IAEO,MAAM,QAAQ,CAAC,KAAiB,EAAA;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC;AAC1C,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,YAAA,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;;;AAItB,YAAA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAC7B,CAA2B,wBAAA,EAAA,IAAI,CAAC,KAAK,CAAC,EAAE,CAAe,aAAA,CAAA,EACvD,EAAE,EACF,MAAM,CACP,CAAC;AACF,YAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YACjD,OAAO,IAAI,EAAE;gBACX,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAG5B,CAA2B,wBAAA,EAAA,IAAI,CAAC,KAAK,CAAC,EAAE,CAAA,6BAAA,EAAgC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAE,CAAA,CACrG,CAAC;AACF,gBAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAE9C,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;AACrB,oBAAA,MAAM,OAAO,GAAQ,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KACrD,EAAE,CAAC,YAAY,CAAC;AACd,wBAAA,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;AACtB,wBAAA,OAAO,EAAE,OAAO;AAChB,wBAAA,IAAI,EAAE,MAAM;AACb,qBAAA,CAAC,CACH,CAAC;AACF,oBAAA,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;AAC1C,oBAAA,MAAM,OAAO,GAAqB;AAChC,wBAAA,IAAI,EAAE,MAAM;AACZ,wBAAA,IAAI,EAAE,YAAY;AAClB,wBAAA,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI;AAClD,wBAAA,IAAI,EAAE,CAAC;qBACR,CAAC;oBACF,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAEjD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACxC,oBAAA,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,KACtC,IAAI,CAAC,MAAM,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAChD,CAAC;AACF,oBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,oBAAA,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;oBAElD,MAAM;iBACP;AAED,gBAAA,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;aACnB;SACF;KACF;IAEO,MAAM,WAAW,CAAC,GASzB,EAAA;;;;;;;;;AASC,QAAA,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAG3B,CAA4B,yBAAA,EAAA,SAAS,CAAC,GAAG,CAAC,CAAA,CAAE,CAAC,CAAC;AACjD,QAAA,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KACtB;AAEO,IAAA,OAAO,CAAI,IAAY,EAAE,IAAU,EAAE,SAAc,KAAK,EAAA;QAC9D,OAAO,IAAI,OAAO,CAA8B,CAAC,OAAO,EAAE,MAAM,KAAI;YAClE,MAAM,OAAO,GAAG,qBAAqB,CAAC;YACtC,EAAE,CAAC,OAAO,CAAC;gBACT,GAAG,EAAE,OAAO,GAAG,IAAI;gBACnB,MAAM;gBACN,IAAI;AACJ,gBAAA,MAAM,EAAE;AACN,oBAAA,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;AACxC,oBAAA,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;AAClC,oBAAA,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;AAC/B,iBAAA;gBACD,OAAO,EAAE,CAAC,GAAG,KACX,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,IAAS,EAAE,CAAC;AAC1D,gBAAA,IAAI,EAAE,MAAM;AACb,aAAA,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;IAED,OAAO,GAAA;QACL,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;AAED,IAAA,MAAM,KAAK,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KACxB;AACF;;;;"}